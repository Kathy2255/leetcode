//@2014-8-9
//DP, think about the recursion formula
class Solution {
public:
    int minDistance(string word1, string word2) {
		if(word1.size() == 0)
			return word2.size();
		if(word2.size() == 0)
			return word1.size();
		vector<int> dist;
		for(int j=0;j<=word1.size();j++)
			dist.push_back(j);
		for(int i=1;i<=word2.size();i++)
		{
			int tmp = dist[0];//diff("", word2.substr(0,i))
			dist[0]++;
			int last_lu = tmp;
			for(int j=1;j<=word1.size();j++)
			{
				int a;
				if(word1[j-1] == word2[i-1])
					a = last_lu;
				else
					a = last_lu + 1;
				int b = min(dist[j] + 1, dist[j-1]+1);
				last_lu = dist[j];
				dist[j] = min(a,b);
			}
		}
		return dist[word1.size()];
    }
};
