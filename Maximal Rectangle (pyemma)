public class MaximalRectangle {
	public static int maximalRectangle(char[][] matrix) {
		int m = matrix.length;
		if(m == 0) return 0;
		int n = matrix[0].length;
		int[] height = new int[n];
		int[] left = new int[n];
		int[] right = new int[n];
		int ma = Integer.MIN_VALUE;
		for(int i = 0; i < m; i++) {
			// update height information
			for(int j = 0; j < n; j++) {
				if(matrix[i][j] == '1') height[j] += 1;
				else height[j] = 0;
			}

			// 1D maximal rectangle
			left[0] = 0;
			for(int j = 1; j < n; j++) {
				int ind = j;
				while(ind > 0 && height[j] <= height[ind-1])
					ind = left[ind-1];
				left[j] = ind;
			}
			right[n-1] = n-1;
			for(int j = n-2; j >= 0; j--) {
				int ind = j;
				while(ind < n-1 && height[j] <= height[ind+1])
					ind = right[ind+1];
				right[j] = ind;
			}
			for(int j = 0; j < n; j++) 
				ma = Math.max(ma, height[j]*(right[j] - left[j] + 1));
		}
		return ma;
	}
}
