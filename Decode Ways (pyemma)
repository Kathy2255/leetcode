public class DecodeWays {
	public static int numDecoding(String s) {
		if(s.length() == 0 || s.charAt(0) == '0') return 0;
		int n = s.length();
		int[] dp = new int[3]; dp[0] = 1;
		for(int i = 1; i < n; i++) {
			// '0' must combine with the prior character
			if(s.charAt(i) == '0') {
				if(s.charAt(i-1) == '1' || s.charAt(i-1) == '2')
					if(i < 2) 
						dp[i%3] = 1;
					else
						dp[i%3] = dp[(i-2)%3];
				else return 0;
			}
			else {
				dp[i%3] = dp[(i-1)%3];
				String str = s.substring(i-1, i+1);
				int num = Integer.parseInt(str);
				if(num >= 11 && num <= 26)
					if(i < 2) 
						dp[i%3] += 1;
					else 
						dp[i%3] += dp[(i-2)%3];
			}
		}
		return dp[(n-1)%3];
	}

	public static void main(String[] args) {
		String str = "110";
		System.out.println(numDecoding(str));
	}
}
