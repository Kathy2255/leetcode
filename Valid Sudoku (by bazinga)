public class Solution {
    public static boolean isValidSudoku(char[][] board) {
    	boolean dup[]=new boolean[9];
        for (int i = 0; i < 9; i++) {
        	initialize(dup);
        	for(int j=0;j<9;j++){
        		if(board[i][j]=='.') continue;
        		int tmp=board[i][j]-'1';
        		if(dup[tmp]!=true) dup[tmp]=true;
        		else return false;
        	}
        	initialize(dup);
        	for(int j=0;j<9;j++){
        		if(board[j][i]=='.') continue;
        		int tmp=board[j][i]-'1';
        		if(dup[tmp]!=true) dup[tmp]=true;
        		else return false;
        	}
		}
    	for (int i=0;i<3;i++){
    		for (int j=0;j<3;j++){
    	    	initialize(dup);
    			for(int k=i*3;k<(i+1)*3;k++){
    				for(int l=j*3;l<(j+1)*3;l++){
    					if(board[k][l]=='.') continue;
    	        		int tmp=board[k][l]-'1';
    	        		if(dup[tmp]!=true) dup[tmp]=true;
    	        		else return false;
    				}
    			}
    		}
    	}
    	return true;
    }
    private static void initialize(boolean dup[]){
    	for (int i = 0; i < dup.length; i++) {
			dup[i]=false;
		}
    }
}
