import java.util.*;

public class CloneGraph {
	HashMap<UndirectedGraphNode, UndirectedGraphNode> map = new HashMap<UndirectedGraphNode, UndirectedGraphNode>();
	private void dfs(UndirectedGraphNode node) {
		if(map.containsKey(node) == false) {
			UndirectedGraphNode nn = new UndirectedGraphNode(node.label);
			map.put(node, nn);
			for(UndirectedGraphNode n : node.neighbors) {
				if(map.containsKey(n) == true)
					nn.neighbors.add(map.get(n));
				else {
					dfs(n);
					nn.neighbors.add(map.get(n));
				}
			}
		}
	}

	public UndirectedGraphNode cloneGraph(UndirectedGraphNode node) {
		if(node == null) return null;
		dfs(node);
		return map.get(node);
	}
}
