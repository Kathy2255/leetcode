import java.util.*;
public class LongestValidParentheses {
	public static int longestValidParenthese(String s) {
		Stack<Integer> stack = new Stack<Integer>();
		int n = s.length();
		if(n == 0) return 0;
		int[] dp = new int[n];
		for(int i = 0; i < n; i++) {
			if(s.charAt(i) == '(') {
				dp[i] = 0;
				stack.push(i);
			}
			else {
				if(stack.size() == 0) dp[i] = 0;
				else {
					int j = stack.pop();
					dp[i] = i - j + 1 + (j == 0 ? 0 : dp[j-1]);// pay attenton when j = 0!
				}
			}
		}
		int ma = Integer.MIN_VALUE;
		for(int i = 0; i < n; i++) ma = Math.max(ma, dp[i]);
		return ma;
	}
}
