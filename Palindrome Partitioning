class Solution {
private:
	bool isPalindrome(string t){
		int beg=0;
		int end=t.length()-1;
		while(beg<end){
			if(t[beg++]!=t[end--]){
				return false;
			}
		}
		return true;
	}
	void partitionrec(string s, vector<string>&temp,int pos, vector<vector<string>>&result){
		if(pos==s.length()){
			result.push_back(temp);
			return;
		}
		for(int i=pos+1;i<=s.length();i++){
			string t=s.substr(pos,i-pos);
			if(!isPalindrome(t)){
				continue;
			}
			temp.push_back(t);
			partitionrec(s,temp,i,result);
			temp.pop_back();
		}
	}
public:
    vector<vector<string>> partition(string s) {
        vector<vector<string>>result;
		if(s.length()==0){
			return result;
		}

		vector<string>temp;
		partitionrec(s,temp,0,result);
		return result;

    }
};
