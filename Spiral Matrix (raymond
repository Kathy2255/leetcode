public class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        List<Integer> res = new ArrayList<Integer>();
        if(matrix.length==0){
            return res;
        }
        int m = matrix.length;
        int n = matrix[0].length;
        int m1 = m;
        int n1 = n;
        int i = 0;
        while(m1>1&&n1>1){
            i = (n-n1)/2;
            while(i<(n+n1)/2){
                res.add(matrix[(m-m1)/2][i]);
                i++;
            }
            i = (m-m1)/2+1;
            while(i<(m+m1)/2){
                res.add(matrix[i][(n+n1)/2-1]);
                i++;
            }
            i = (n+n1)/2-2;
            while(i>=(n-n1)/2){
                res.add(matrix[(m+m1)/2-1][i]);
                i--;
            }
            i = (m+m1)/2-2;
            while(i>(m-m1)/2){
                res.add(matrix[i][(n-n1)/2]);
                i--;
            }
            m1 = m1-2;
            n1 = n1-2;
        }
        if(m1==1){
            i = (n-n1)/2;
            while(i<(n+n1)/2){
                res.add(matrix[m/2][i]);
                i++;
            }
        }
        else if(n1==1){
            i = (m-m1)/2;
            while(i<(m+m1)/2){
                res.add(matrix[i][n/2]);
                i++;
            }
        }
        return res;
    }
}
