public class DistinctSubsequence {
	public static int numDistinct(String S, String T) {
		int m = T.length();
		int n = S.length();
		int[][] dp = new int[m+1][n+1]; // record the number of unique distinct
										// sequence of s.substring(0, i+1) and t.substring(0, j+1)
		dp[0][0] = 1; // base case
		for(int i = 1; i <= n; i++) dp[0][i] = 1;
		for(int i = 1; i <= m; i++) dp[i][0] = 0;
		for(int i = 1; i <= n; i++) {
			for(int j = 1; j <= m; j++) {
				if(S.charAt(i-1) != T.charAt(j-1)) {
					dp[j][i] = dp[j][i-1];
				} 
				else {
					dp[j][i] = dp[j-1][i-1] + dp[j][i-1];
				}
			}
		}
		return dp[m][n];
	}

	public static void main(String[] args) {
		System.out.println(numDistinct("aacaacca", "ca"));
	}
}
