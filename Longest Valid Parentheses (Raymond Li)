public class Solution {
    public int longestValidParentheses(String s) {
        if(s.length()==0){
            return 0;
        }
        Stack stack = new Stack();
        int[] arr = new int[s.length()];
        arr[0] = 0;
        int j = 0;
        int curr = 0;
        int i = 1;
        while(i<s.length()){
            if(s.charAt(i)=='('){
                arr[i] = arr[i-1];
            }
            else{
                stack.clear();
                curr = i+1;
                stack.push(')');
                j = i-1;
                while(j>=0){
                    if(s.charAt(j)==')'){
                        stack.push(')');
                    }
                    else if(!stack.isEmpty()&&s.charAt(j)=='('){
                        stack.pop();
                        if(stack.isEmpty()){
                            curr = j;   
                        }
                    }
                    else{
                        break;
                    }
                    j--;
                }
                arr[i] = Math.max(arr[i-1],i-curr+1);
            }
            i++;
        }
        return arr[s.length()-1];
    }
}
