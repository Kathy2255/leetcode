class Solution {
public:
    void solveNQueensHelper(vector<int> num, int index, int n, int &result)
	{
		bool flag = true;
		if (index == n)
		{
			for (int i = 0; i < n; i++)
			{
				for (int j = i + 1; j < n; j++)
				{
					if (j - i == abs(num[j] - num[i]))
					{
						flag = false;
						break;
					}
				}
				if (flag == false) break;
			}
			if (flag) result++;
		}
		for (int i = index; i < n; i++)
		{
			swap(num[index], num[i]);
			solveNQueensHelper(num, index + 1, n, result);
			swap(num[index], num[i]);
		}
	}
	
    int totalNQueens(int n) {
        vector<int> num;
		int result = 0;
		for (int i = 0; i < n; i++) num.push_back(i);
		solveNQueensHelper(num, 0, n, result);
		return result;
    }
};
