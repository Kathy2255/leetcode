public class Solution {
    public static boolean search(int[] A, int target) {
        return binarysearch(A,0,A.length-1,target);
    }
    private static boolean binarysearch(int[] A, int start, int end, int target){
        if(end<start) return false;
        int mid;
        if(A[end]>A[start]){
            if(A[end]<target || A[start]>target) return false;
        }else{
            if(A[start]>target && A[end]<target) return false;
        }
        mid=(start+end)/2;
        if(A[mid]==target) return true;
        if(A[mid]>A[start]){
            if(A[mid]>target && A[start]<=target) return binarysearch(A,start,mid,target);
            else return binarysearch(A,mid+1,end,target);
        }else if(A[mid]<A[start]){
            if(A[mid]<target && target<=A[end]) return binarysearch(A,mid+1,end,target);
            else return binarysearch(A,start,mid,target);
        }else{
        	return binarysearch(A,start+1,end,target);
        }
    }
}
