public class Solution {
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        Arrays.sort(candidates);
        List<List<Integer>> res = new ArrayList<List<Integer>>();
        if(candidates.length>0&&target==candidates[0]){
            res.add(new ArrayList<Integer>());
            res.get(0).add(target);
            return res;
        }
        if(candidates.length==0||target<candidates[0]){
            return res;
        }
        List<List<Integer>> res1 = combinationSum(candidates,target-candidates[0]);
        int[] arr = new int[candidates.length-1];
        int i = 0;
        while(i<arr.length){
            arr[i]=candidates[i+1];
            i++;
        }
        List<List<Integer>> res2 = combinationSum(arr,target);
        i = 0;
        while(i<res1.size()){
            res1.get(i).add(0,candidates[0]);
            res.add(res1.get(i));
            i++;
        }
        i=0;
        while(i<res2.size()){
          res.add(res2.get(i));
          i++;
        }
        return res;
    }
}
